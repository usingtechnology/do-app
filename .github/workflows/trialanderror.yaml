# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the develop branch
  push:
    branches: 
      - develop
      - main
    tags:
      - '*'
  pull_request:
    branches:
      - develop
  
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
    
  init:
    runs-on: ubuntu-20.04
    steps:
      - name: "set pr environment variables"
        if: github.event_name == 'pull_request'
        run: echo "tag=pr" >> $GITHUB_ENV
      - name: "set dev environment variables"
        if: github.event_name == 'push' && github.ref == 'refs/heads/develop'
        run: echo "tag=dev" >> $GITHUB_ENV
      - name: "set test environment variables"
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/test')
        run: echo "tag=test" >> $GITHUB_ENV
      - name: "set prod environment variables"
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: echo "tag=prod" >> $GITHUB_ENV
          
      - name: Prepare docker tags for holder image
        id: holdertags
        uses: docker/metadata-action@v3
        with:
          images: ghcr.io/usingtechnology/do-app/traction-holder
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=ref,event=tag
            type=sha
            type=raw,value=${{ env.tag }}   
          
      - name: Prepare docker tags for holder image
        id: verifiertags
        uses: docker/metadata-action@v3
        with:
          images: ghcr.io/usingtechnology/do-app/traction-verifier
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=ref,event=tag
            type=sha
            type=raw,value=${{ env.tag }}   
           
    outputs:
     holdertags: ${{ steps.holdertags.outputs.tags }}
     verifiertags: ${{ steps.verifiertags.outputs.tags }}
     tag: ${{ env.tag }}
      

  build-holder:
     # The type of runner that the job will run on
    runs-on: ubuntu-20.04
    needs: init
    
    steps:
       # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner}}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner}}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push holder image
        id: builder
        uses: docker/build-push-action@v2
        with:
          context: ./services/holder
          push: true
          tags: ${{ needs.init.outputs.holdertags }}
    
    outputs:
     digest: ${{ steps.builder.outputs.digest }}
    
  build-verifier:
    # The type of runner that the job will run on
    runs-on: ubuntu-20.04
    needs: init 
    
    steps:      
        # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner}}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner}}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push verifier image
        id: builder
        uses: docker/build-push-action@v2
        with:
          context: ./services/verifier
          push: true
          tags: ${{ needs.init.outputs.verifiertags }}
    
    outputs:
     digest: ${{ steps.builder.outputs.digest }}

  update-config:
    runs-on: ubuntu-20.04
    needs: 
      - init
      - build-holder
      - build-verifier
    if: ${{ always() && contains(needs.*.result, 'success') && !(contains(needs.*.result, 'failure')) }}
    
    steps:  
      - name: Check out config repo
        uses: actions/checkout@v2
        with:
          ssh-key: ${{ secrets.MANIFEST_REPO_DEPLOY_KEY }}
          repository: ${{ secrets.MANIFEST_REPO }}

      - name: Update image ID and commit change
        shell: bash
        run: |
          ls -l
          yq eval '.holder.image.tag = "${{needs.build-holder.outputs.digest }}"' -i values-${{ needs.init.outputs.tag }}.yaml
          yq eval '.verifier.image.tag = "${{needs.build-verifier.outputs.digest }}"' -i values-${{ needs.init.outputs.tag }}.yaml
          cat values-${{ needs.init.outputs.tag }}.yaml
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git commit -am "Update image ID for ${{ env.TAG_NAME }}"
          git push origin
