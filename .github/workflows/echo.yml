name: echo
on:
  push:
    branches: 
      - develop
    paths-ignore:
      - '.github/**'
    tags:
      - '*'

  workflow_dispatch:

jobs:
  init:
    runs-on: ubuntu-20.04
    env:
      GITHUB_CONTEXT: ${{ toJson(github) }}
      CI_CD_TARGET: ''
      CI_SHORT_SHA: ''
      CI_IS_RELEASE: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v') }}
      CI_PRERELEASE: ''
    steps:

      - name: set CI_SHORT_SHA
        run: echo "CI_SHORT_SHA=${GITHUB_SHA::7}" >> $GITHUB_ENV

      - name: Parse semver string
        if: ${{ fromJSON(env.CI_IS_RELEASE) }}
        continue-on-error: true
        id: semver_parser 
        uses: booxmedialtd/ws-action-parse-semver@v1
        with:
          input_string: ${{ github.ref }}
          version_extractor_regex: '\/v(.*)$'   

      - name: set CI_PRERELEASE 
        if: ${{ steps.semver_parser.outputs.prerelease != null }}
        run: |
          echo "CI_PRERELEASE=${{ steps.semver_parser.outputs.prerelease }}" >> $GITHUB_ENV

      - name: print release config
        run: |
          echo "Is release: ${{ env.CI_IS_RELEASE }}"
          echo "Pre-release: ${{ env.CI_PRERELEASE }}"

      - name: set CI_CD_TARGET (dev)
        if: github.event_name == 'push' && github.ref == 'refs/heads/develop'
        run: echo "CI_CD_TARGET=dev" >> $GITHUB_ENV

      - name: set CI_CD_TARGET (test)
        if: ${{ fromJSON(env.CI_IS_RELEASE) && env.CI_PRERELEASE != '' }}
        run: |
          echo "CI_CD_TARGET=$CI_PRERELEASE" >> $GITHUB_ENV
 
      - name: set CI_CD_TARGET (prod)
        if: ${{ fromJSON(env.CI_IS_RELEASE) && env.CI_PRERELEASE == '' }}
        run: echo "CI_CD_TARGET=prod" >> $GITHUB_ENV
    
      - name: set CI_CD_TARGET (workflow)
        if: ${{ !fromJSON(env.CI_IS_RELEASE) && github.event_name == 'workflow_dispatch' }}
        run: echo "CI_CD_TARGET=workflow" >> $GITHUB_ENV
          
      - name: print outputs
        run: |
          echo "Short SHA: ${{ env.CI_SHORT_SHA }}"
          echo "CI CD Target: ${{ env.CI_CD_TARGET }}"          

    outputs:
      short_sha: ${{ env.CI_SHORT_SHA }}
      cd_target: ${{ env.CI_CD_TARGET }}

  echo:
     # The type of runner that the job will run on
    runs-on: ubuntu-20.04
    needs: init
    steps:
      - name: echo outputs
        run: |
            echo "${{needs.init.outputs.short_sha }}"
            echo "${{needs.init.outputs.cd_target }}"

